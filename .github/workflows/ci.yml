name: Lint and run tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  shellcheck:
    runs-on: ubuntu-latest
    container: koalaman/shellcheck-alpine
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      - name: shellcheck
        run: shellcheck *.sh test/*.bats test/*.bash
  golangci-lint:
    name: golangci-lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.24

      - name: Install golangci-lint
        run: go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest

      - name: Run golangci-lint
        run: golangci-lint run --timeout=5m
  go-test:
    needs: golangci-lint
    name: go test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.24

      - name: Run Go test
        run: go test -v ./...
  bats:
    needs: shellcheck
    name: bats test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, ubuntu-22.04, macos-latest, macos-13]
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.24

      - name: Setup Bats and bats libs
        id: setup-bats
        uses: bats-core/bats-action@3.0.0

      - name: Run bats test
        env:
          BATS_LIB_PATH: ${{ steps.setup-bats.outputs.lib-path }}
        run: bats test
